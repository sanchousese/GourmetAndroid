{
  "author": {
    "name": "Andrew Lunny",
    "email": "alunny@gmail.com"
  },
  "name": "plugman",
  "description": "install/uninstall Cordova plugins",
  "version": "0.5.6",
  "repository": {
    "type": "git",
    "url": "git://github.com/imhotep/plugman.git"
  },
  "main": "plugman.js",
  "engines": {
    "node": ">=0.6.7"
  },
  "dependencies": {
    "nopt": "1.0.x",
    "glob": "3.0.x",
    "elementtree": "0.1.x",
    "xcode": "git+https://github.com/imhotep/node-xcode.git",
    "plist": "0.4.x",
    "bplist-parser": "0.0.x",
    "shelljs": "0.1.x",
    "osenv": "0.0.x"
  },
  "devDependencies": {
    "nodeunit": "0.7.x"
  },
  "bin": {
    "plugman": "./plugman.js"
  },
  "scripts": {
    "test": "nodeunit test"
  },
  "gitHead": "11eb0c75e27e163b126e68229bfcb2980957be75",
  "readme": "plugman\n===================\n\nA command line tool to distribute and package plugins for use with Apache Cordova, nee PhoneGap.\n\nThis document defines tool usage and the plugin format specification. This is not an official document of the Apache Cordova project.\n\n\n## Design Goals\n* facilitate programmatic installation and manipulation of plugins\n* detail the dependencies and components of individual plugins\n* allow code reuse between different target platforms\n\n\n## Usage\n\nAdding plugins:\n\n    plugman --platform PLATFORM --project PROJECT-PATH --plugin PLUGIN-PATH|PLUGIN-GIT-URL|PLUGIN-NAME\n\nExample:\n\n    plugman --platform android --project . --plugin ~/plugins/ChildBrowser\n\nRemoving plugins:\n \n    plugman --platform PLATFORM --project PROJECT-PATH --plugin PLUGIN-PATH|PLUGIN-GIT-URL|PLUGIN-NAME --remove\n\nExample:\n\n    plugman --platform android --project . --plugin ~/plugins/ChildBrowser --remove\n\nListing plugins:\n \n    plugman --list\n\n    \n### Supported Platforms\n* iOS\n* Android\n\n### Supported Plugins\nAndrew Lunny's tamed plugins for ChildBrowser and PGSQLite will work but need to be massaged into the right format. \n\n\n## Development\n\n    git clone https://github.com/imhotep/plugman.git\n    cd plugman\n    npm install -g\n   \n\n\n## Plugin Directory Structure\n\nA plugin is typically a combination of some web/www code, and some native code.\nHowever, plugins may have only one of these things - a plugin could be a single\nJavaScript, or some native code with no corresponding JavaScript.\n\nHere is a sample plugin named foo with android and ios platforms support, and 2 www assets.\n\n```\nfoo-plugin/\n|- plugin.xml     # xml-based manifest\n|- src/           # native source for each platform\n|  |- android/ \n|  |  `- Foo.java\n|  `- ios/\n|     |- CDVFoo.h\n|     `- CDVFoo.m\n|- README.md\n`- www/\n   |- foo.js\n   `- foo.png \n```   \n\n## plugin.xml Manifest Format\n\nThe `plugin.xml` file is an XML document in the plugins namespace -\n`http://www.phonegap.com/ns/plugins/1.0`. It contains a top-level `plugin`\nelement defining the plugin, and children that define the structure of the\nplugin.\n\nA sample plugin element:\n\n\t<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n    <plugin xmlns=\"http://www.phonegap.com/ns/plugins/1.0\"\n        xmlns:android=\"http://schemas.android.com/apk/res/android\"\n        id=\"com.alunny.foo\"\n        version=\"1.0.2\">\n\n\n### &lt;plugin&gt; element\n\nThe `plugin` element is the top-level element of the plugin manifest. It has the\nfollowing attributes:\n\n#### xmlns (required)\n\nThe plugin namespace - `http://www.phonegap.com/ns/plugins/1.0`. If the document\ncontains XML from other namespaces - for example, tags to be added ot the\nAndroidManifest.xml file - those namespaces should also be included in the\ntop-level element.\n\n#### id (required)\n\nA reverse-domain style identifier for the plugin - for example, `com.alunny.foo`\n\n#### version (required)\n\nA version number for the plugin, that matches the following major-minor-patch\nstyle regular expression:\n\n    ^\\d+[.]\\d+[.]\\d+$\n\n### Child elements\n\n### &lt;engines&gt; element\n\nThe child elements of the `<engines>` element specify versions of\nApache Cordova-based frameworks that this plugin supports. An example:\n\n    <engines>\n        <engine name=\"cordova\" version=\"1.7.0\" />\n        <engine name=\"cordova\" version=\"1.8.1\" />\n        <engine name=\"worklight\" version=\"1.0.0\" />\n    </engines>\n\nSimilarly to the `version` attribute for the `<plugin>` element,\nthe version string specified should match a major-minor-patch string\nconforming to the regular expression:\n\n    ^\\d+[.]\\d+[.]\\d+$\n\nEngine elements may also have fuzzy matches to avoid repetition, and reduce\nmaintenance when the underlying platform is updated. A minimum of `>`, `>=`,\n`<` and `<=` should be supported by tools, such as:\n\n    <engines>\n        <engine name=\"cordova\" version=\">=1.7.0\" />\n        <engine name=\"cordova\" version=\"<1.8.1\" />\n    </engines>\n\nplugman will abort plugin installation if the target project does not meet the engine constraints.\n\n\n\n### &lt;name&gt; element\n\nA human-readable name for the plugin. The text content of the element contains\nthe name of the plugin. An example:\n\n    <name>Foo</name>\n\nThis element does not yet handle localization.\n\n\n### &lt;asset&gt; element\n\nOne or more elements listing the files or directories to be copied into a\nCordova app's `www` directory. A couple of samples:\n\n    <!-- a single file, to be copied in the root directory -->\n    <asset src=\"www/foo.js\" target=\"foo.js\" />\n    <!-- a directory, also to be copied in the root directory -->\n    <asset src=\"www/foo\" target=\"foo\" />\n\nAll assets tags require both a `src` attribute and a `target` attribute.\n\n#### src (required)\n\nWhere the file or directory is located in the plugin package, relative to the\n`plugin.xml` document.\n\n#### target (required)\n\nWhere the file or directory should be located in the Cordova app, relative to\nthe `www` directory.\n\nAssets can be targeted to subdirectories - for instance:\n\n    <asset src=\"www/new-foo.js\" target=\"js/experimental/foo.js\" />\n\nwould create the `js/experimental` directory in the `www` directory, if not\npresent, and then copy the file `new-foo.js` as `foo.js` into that directory.\n\nIf a file exists at the target location, tools based on this specification\nshould stop the installation process and notify the user of the conflict.\n\n### &lt;platform&gt;\n\nPlatform tags identify platforms that have associated native code. Tools using\nthis specification can identify supported platforms and install the code into\nCordova projects.\n\nA sample platform tag:\n\n    <platform name=\"android\">\n    <!-- android specific elements -->\n    </platform>\n    <platform name=\"ios\">\n    <!-- ios specific elements -->\n    </platform>\n\n#### name (required)\n\nThe `name` attribute identifies a platform as supported - it also associates the\nelement's children with that platform.\n\nPlatform names should be all-lowercase. Platform names, as arbitrarily chosen,\nare listed:\n\n* android\n* ios\n\n\n### &lt;source-file&gt;\n\n`source-file` elements identify executable source code that should be installed\ninto a project. A couple of examples:\n\n    <!-- android -->\n    <source-file src=\"src/android/Foo.java\"\n                    target-dir=\"src/com/alunny/foo\" />\n    <!-- ios -->\n    <source-file src=\"CDVFoo.m\" />\n\nAs with assets, if a `source-file` would overwrite an existing file, tools\nshould notify the user and stop, like, right away.\n\n#### src (required)\n\nWhere the file is located, relative to the `plugin.xml` file.\n\n#### target-dir\n\nA directory where the files should be copied into, relative to the root of the\nCordova project.\n\nIn practice, this is most important for Java-based platforms, where a file in\nthe package `com.alunny.foo` has be located under the directory\n`com/alunny/foo`. For platforms where the source directory is not important,\nplugin authors should omit this attribute.\n\n### &lt;config-file&gt;\n\nIdentifies an XML-based configuration file to be modified, where in that\ndocument the modification should take place, and what should be modified.\n\nAt this stage in the spec, the `config-file` element only allows for appending\nnew children into an XML document. The children are XML literals that are the\nto be inserted in the target document.\n\nExample:\n\n    <config-file target=\"AndroidManifest.xml\" parent=\"/manifest/application\">\n        <activity android:name=\"com.foo.Foo\"\n                  android:label=\"@string/app_name\">\n                  <intent-filter>\n                  </intent-filter>\n        </activity>\n    </config-file>\n\n#### target\n\nThe file to be modified, and the path relative to the root of the Cordova\nproject.\n\nIf this file does not exist, the tool will exit.\n\n#### parent\n\nAn absolute XPath selector pointing to the parent of the elements to be added to\nthe config file.\n\n### &lt;plugins-plist&gt;\n\nThis is OUTDATED. Only applies to Cordova 2.2.0 and below). Use &lt;config-file&gt; tag (same as Android) for newer versions of Cordova.\n\nExample:\n\n    <config-file target=\"config.xml\" parent=\"/cordova/plugins\">\n         <plugin name=\"ChildBrowser\"\n             value=\"ChildBrowserCommand\"/>\n    </config-file>\n\nSpecifies a key and value to append to the correct `AppInfo.plist` file in an\niOS Cordova project. Example:\n\n    <plugins-plist key=\"Foo\"\n                   string=\"CDVFoo\" />\n\nThis may be an implementation detail leaking through, and could be merged with\nthe `config-file` element at some later point.\n\n### &lt;resource-file&gt; and &lt;header-file&gt;\n\nLike source files, but specifically for platforms that distinguish between\nsource files, headers, and resources (iOS)\n\nExamples:\n\n    <resource-file src=\"CDVFoo.bundle\" />\n    <resource-file src=\"CDVFooViewController.xib\" />\n    <header-file src=\"CDVFoo.h\" />\n\nThis is probably an implementation detail leaking through, and future versions\nof this document will likely merge these elements with `source-file`.\n\n\n### &lt;framework&gt;\n\nIdentifies a framework (usually part of the OS/platform) that the plugin depends\non. Example:\n\n    <framework src=\"libsqlite3.dylib\" />\n\nplugman identifies the framework through the `src` attribute and attempts to add the framework to the Cordova project, in the correct fashion for a given platform.\n\n## Variables\n\nIn certain cases, a plugin may need to make configuration changes dependent on\nthe target application. For example, to register for C2DM on Android, an app\nwith package id `com.alunny.message` would need a permission like:\n\n    <uses-permission\n    android:name=\"com.alunny.message.permission.C2D_MESSAGE\"/>\n\nIn cases like this (where the content inserted from the `plugin.xml` file is\nnot known ahead of time), variables can be indicated by a dollar-sign and a\nseries of capital letters, digits and underscores. For the above example, the\n`plugin.xml` file would include this tag:\n\n    <uses-permission\n    android:name=\"$PACKAGE_NAME.permission.C2D_MESSAGE\"/>\n\nplugman replaces variable references with the\ncorrect value, if specified, or the empty string otherwise. The value of the\nvariable reference may be detected (in this case, from the `AndroidManifest.xml`\nfile, or specified by the user of the tool; the exact process is dependent on\nthe particular tool.\n\nCertain variable names should be reserved - these are listed below.\n\n### $PACKAGE_NAME\n\nThe reverse-domain style unique identifier for the package - corresponding to\nthe `CFBundleIdentifier` on iOS or the `package` attribute of the top-level\n`manifest` element in an `AndroidManifest.xml` file.\n\n## Project Directory Structure\nTODO: show how the foo plugin example from above will have its files placed in a cordova project after running plugman\n\n## Authors\n\n* Andrew Lunny\n* Fil Maj\n* Mike Reinstein\n* Anis Kadri\n\n## Contributors\n\nMichael Brooks\n\n\n## License\n\nApache\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/imhotep/plugman/issues"
  },
  "homepage": "https://github.com/imhotep/plugman#readme",
  "_id": "plugman@0.5.6",
  "_shasum": "f00c3b9860dd0bcdf009a055f568bb9c58078dcb",
  "_from": "git+https://github.com/imhotep/plugman.git#0.5.7",
  "_resolved": "git+https://github.com/imhotep/plugman.git#11eb0c75e27e163b126e68229bfcb2980957be75"
}
